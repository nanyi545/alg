--------------------------------------GC/MAT---------------------------------------------------

JVM垃圾回收

GC (Garbage Collection)的基本原理：将内存中不再被使用的对象进行回收，GC中用于回收的方法称为收集器，由于GC需要消耗一些资源和时间，Java在对对象的生命周期特征进行分析后，按照新生代、旧生代的方式来对对象进行收集，以尽可能的缩短GC对应用造成的暂停

（1）对新生代的对象的收集称为minor GC；

（2）对旧生代的对象的收集称为Full GC；

（3）程序中主动调用System.gc()强制执行的GC为Full GC。

不同的对象引用类型， GC会采用不同的方法进行回收，JVM对象的引用分为了四种类型：

（1）强引用：默认情况下，对象采用的均为强引用（这个对象的实例没有引用，GC时才会被回收）

（2）软引用：软引用是Java中提供的一种比较适合于缓存场景的应用（只有在内存不够用的情况下才会被GC）

（3）弱引用：在GC时一定会被GC回收               

（4）虚引用：虚引用只是用来得知对象是否被GC



---MAT--> MAT is the better tool for LEAKs detect.

generate dump: -->  android device monitor  --> select process --> dump --> save -->

convert in command line by :  [ hprof-conv  aaa.hprof  bbb.hprof  ] ---> you can open bbb.hprof

 shallow heap: object 的空间，retained heap: 包括reference 的object的所有空间。How to calculate retained heap? ..Dominator tree.. concept in graph theory, if every path to node A goes through D, then D is the dominator of A....

-----MAT..  à Dominator Tree: List the biggest objects / what they keep alive. àright click àpath to GC root àexclude weak references/all references

Dollar sign represents anonymous inner classes...         


