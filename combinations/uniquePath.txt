1XXXXXX
XXXXXXX
XXXXXX2 


from 1 to 2 , how many unique paths ??    (size: m * n )

only down/right operations are allowed ... 


solution :   
m-1  down operations    +    n-1  right operations 


arrangement of (m-1) D and (n-1) R operations ....


(m-1+n-1)!/(m-1)!/(n-1)! 


**** compute factorial will very likely result in overflow ( even with long ), compute it like this ....   

m--;
n--;

( make sure that m > n )

(m+1)*(m+2)*...*(m+n) / n!



/** -----------------  code is here ---------------------**/

    public int uniquePaths(int m, int n) {
        if(m==1||n==1) return 1;
        m--;
        n--;
        if (n>m) {
            int temp=n;
            n=m;
            m=temp;
        }
        
        long ret=1;
        for (int i=1;i<=n;i++){
            ret*=(m+i);
            ret/=i;
        }
        return (int)ret;
    }
    
    

 
